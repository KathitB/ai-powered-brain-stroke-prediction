{"ast":null,"code":"var _jsxFileName = \"C:\\\\COLLEGE\\\\stroke--prediction-final\\\\frontend\\\\src\\\\components\\\\UploadCTScan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadCTScan() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      const fileType = selectedFile.type;\n      if (!fileType.startsWith(\"image/\")) {\n        setError(\"Please upload a valid image file (JPG, PNG, etc.)\");\n        setFile(null);\n        return;\n      }\n      setFile(selectedFile);\n      setError(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a CT scan image.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      setLoading(true);\n      setError(null);\n      setResult(null);\n      const response = await axios.post(\"http://127.0.0.1:5000/predict-image\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.data.error) {\n        setError(response.data.error);\n      } else {\n        setResult(response.data);\n      }\n    } catch (err) {\n      setError(\"Error processing the image. Please try again.\");\n      console.error(\"API Error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload CT Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"\\u26A0 \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Prediction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), \" \", result.prediction, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Confidence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), \" \", result.confidence !== null ? result.confidence.toFixed(2) : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadCTScan, \"zEOmsZgA+wjC0FAlK0rlOWLpORM=\");\n_c = UploadCTScan;\nexport default UploadCTScan;\nvar _c;\n$RefreshReg$(_c, \"UploadCTScan\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadCTScan","_s","file","setFile","result","setResult","error","setError","loading","setLoading","handleFileChange","e","selectedFile","target","files","fileType","type","startsWith","handleUpload","formData","FormData","append","response","post","headers","data","err","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","color","prediction","confidence","toFixed","_c","$RefreshReg$"],"sources":["C:/COLLEGE/stroke--prediction-final/frontend/src/components/UploadCTScan.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UploadCTScan() {\r\n  const [file, setFile] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n\r\n    if (selectedFile) {\r\n      const fileType = selectedFile.type;\r\n      if (!fileType.startsWith(\"image/\")) {\r\n        setError(\"Please upload a valid image file (JPG, PNG, etc.)\");\r\n        setFile(null);\r\n        return;\r\n      }\r\n\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setError(\"Please select a CT scan image.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setResult(null);\r\n\r\n      const response = await axios.post(\"http://127.0.0.1:5000/predict-image\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      if (response.data.error) {\r\n        setError(response.data.error);\r\n      } else {\r\n        setResult(response.data);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error processing the image. Please try again.\");\r\n      console.error(\"API Error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h2>Upload CT Scan</h2>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <br />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Processing...\" : \"Predict\"}\r\n      </button>\r\n\r\n      {error && <p style={{ color: \"red\" }}>âš  {error}</p>}\r\n      {result && (\r\n        <p>\r\n          <strong>Prediction:</strong> {result.prediction} <br />\r\n          <strong>Confidence:</strong> {result.confidence !== null ? result.confidence.toFixed(2) : \"N/A\"}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadCTScan;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}